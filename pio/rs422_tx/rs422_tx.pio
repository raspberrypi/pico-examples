;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;
.pio_version 0 // only requires PIO version 0

.program rs422_tx
.side_set 2 opt

; An 8n1 UART transmit program.
; OUT pin 0-1 are mapped to RS422 TX+ and TX- pin.

    pull        side 0b01 [3]  ; Assert stop bit, or stall with line in idle state
    nop
    nop
    nop
    nop
    set x, 7    side 0b10 [3]  ; Preload bit counter, assert start bit
    nop
    nop
    nop
bitloop:                   ; This loop will run 8 times (8n1)
    out y, 1               ; Shift 1 bit from OSR to the Y register
    jmp !y put0
put1:
    jmp cont    side 0b01 [3]
put0:
    nop         side 0b10 [3]
cont:
    nop
    jmp x-- bitloop


% c-sdk {
#include "hardware/clocks.h"

static inline void rs422_tx_program_init(PIO pio, uint sm, uint offset, uint pin_tx, uint baud) {
    // Tell PIO to initially drive output-high on the selected pin, then map PIO
    // onto that pin with the IO muxes.
    pio_sm_set_consecutive_pindirs(pio, sm, pin_tx, 2, true);
    for ( uint i = 0;i<2;i++ ) {
        pio_gpio_init(pio, pin_tx + i);
    }

    pio_sm_config c = rs422_tx_program_get_default_config(offset);

    // OUT shifts to right, no autopull
    sm_config_set_out_shift(&c, true, false, 32);

    // We use side-set to control the RS422 differential pins
    // Data bits are determined by conditional jumps based on OUT to Y register
    sm_config_set_sideset_pins(&c, pin_tx);

    // We only need TX, so get an 8-deep FIFO!
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    // SM transmits 1 bit per 8 execution cycles.
    float div = (float)clock_get_hz(clk_sys) / (8 * baud);
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

static inline void rs422_tx_program_putc(PIO pio, uint sm, char c) {
    pio_sm_put_blocking(pio, sm, (uint32_t)c);
}

static inline void rs422_tx_program_puts(PIO pio, uint sm, const char *s) {
    while (*s)
        rs422_tx_program_putc(pio, sm, *s++);
}

%}
